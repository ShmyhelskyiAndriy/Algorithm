class Queue<T> {    // посилання на перший елемент    Node<T> front;    // посилання на останній ел.    Node<T> last;    int quantity;    //метод для додавання елементу    public void enqueue(T data){        Node<T> node = new Node<>();        node.data = data;        if (front == null) { // якщо черша порожня, то новий елемент стає як і першим, так і останнім            front = node;            last = node;        } else {            last.next = node; // інакше-новий елемент додаться після останнього            last = node; // і стає останнім        }        quantity++;    }    //метод для видалення першого елементу черги    public void dequeue(){        if (front == null) {            System.out.println("Queue is empty");            return;        }        front = front.next; // заміна посилання front на наступний елемент у черзі        quantity--;        if (front == null) {            last = null;        }    }    public void show(){        if(quantity == 0){            System.out.println("Queue is empty");            return;        }        Node<T> temp = front;        while(temp != null){            System.out.print(temp.data + "\t");            temp = temp.next;        }        System.out.println();    }    //клас, що представляє вузол черги    static class Node<T>{        // у кожного вузла є дані та посилання на наступний елемент        T data;        Node<T> next;    }}